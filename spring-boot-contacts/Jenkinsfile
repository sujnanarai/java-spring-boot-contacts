pipeline { 
   
    environment {
            def projectPath = "spring-boot-contacts/"
    }
    agent any 

    stages {
        stage('Checkout') { 
            steps { 
               //git branch: 'release-war', url: 'https://github.com/sujnanarai/java-spring-boot-contacts.git'
               checkout scm
            }
        }
		stage('Packaging'){
			steps {		
				dir(projectPath) {
					sh 'mvn clean package' 	
				}					
			}
		}
		stage('Publish test results') {
			steps {	
				dir(projectPath) {
					step([$class: 'JUnitResultArchiver', testResults: 'target/surefire-reports/TEST-*.xml'])
					publishHTML([allowMissing: true, 
								alwaysLinkToLastBuild: false,
								keepAll: true, 
								reportDir: 'target/site/jacoco/', 
								reportFiles: 'index.html', 
								reportName: 'Code Coverage Report', 
								reportTitles: ''])
				}
			}
		}
		stage('Archival') {
			steps {	
				dir(projectPath) {
					archiveArtifacts artifacts: 'target/*.war', onlyIfSuccessful: true
				}
			}
		}  
		stage('Deployment to Tomcat') {
			steps {	
				dir(projectPath) {
    				withCredentials([usernamePassword(credentialsId: '2203d3db-9bf1-4866-a0a6-248e338bc264', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                          sh 'echo $PASSWORD'
                          // also available as a Groovy variable
                          echo USERNAME
                          // or inside double quotes for string interpolation
                          echo "username is $USERNAME"
                          sh 'curl --upload-file target/*.war "http://13.233.105.107:8080/manager/text/deploy?path=/springcontact&update=true" --user $USERNAME:$PASSWORD'
                    }
    				/*
    					sh 'curl -X POST http://my75482dns.eastus2.cloudapp.azure.com:8888/shutdown || true'
                        // copy file to target location
                        sh 'cp target/*.jar /tmp/'
                        // start the application
                        sh 'echo "nohup nice java -jar /tmp/spring-boot-contacts-0.0.1-SNAPSHOT.jar &"'
                        // wait for application to respond
                        sh 'while ! httping -qc1 http://my75482dns.eastus2.cloudapp.azure.com:8888 ; do sleep 1 ; done'
    			    */
			    
			        //sh 'echo "mvn spring-boot:run"'
			    
				}
			}
		}
    }
}
