
node {
    stage('checkout') {
        //git branch: 'release', url: 'https://github.com/sujnanarai/java-spring-boot-contacts.git'
        chckout scm
    }
    def projectPath = "spring-boot-contacts/"
    dir(projectPath) {
        stage('compiling, test, packaging') {
            sh 'mvn clean package'
            
            //Save all artifacts in temporary area (stash)
            stash excludes: 'test-results/**', includes: '**', name: 'everything'
        }
        stage(' publish test results') {
            step([$class: 'JUnitResultArchiver', testResults: 'target/surefire-reports/TEST-*.xml'])
            publishHTML([allowMissing: true, 
                            alwaysLinkToLastBuild: false,
                            keepAll: true, 
                            reportDir: 'target/site/jacoco/', 
                            reportFiles: 'index.html', 
                            reportName: 'Code Coverage Report', 
                            reportTitles: ''])
        }
        
       
       
        stage(' archival') {
            archiveArtifacts artifacts: 'target/*.jar', onlyIfSuccessful: true
        }
        
        
       
        
    }
}


input 'Deploy to staging?'


stage name: 'Stop, Deploy and Start', concurrency: 1
    node {
        sh 'ls'
        //Clean the workspace
        sh 'rm -rf *'
        //Unstash previously saved artifacts
        unstash 'everything'
         
        // shutdown
        sh 'curl -X POST http://my75482dns.eastus2.cloudapp.azure.com:8888/shutdown || true'
        // copy file to target location
        sh 'cp target/*.jar /tmp/'
        // start the application
        sh 'nohup java -jar /tmp/*.jar &'
        // wait for application to respond
        sh 'while ! httping -qc1 http://my75482dns.eastus2.cloudapp.azure.com:8888 ; do sleep 1 ; done'
            
    }


 
